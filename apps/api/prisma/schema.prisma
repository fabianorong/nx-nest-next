generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comment {
  id        Int       @id @default(autoincrement())
  text      String
  createdAt DateTime? @default(now()) @db.Timestamp(6)
  user_id   Int
  user      User      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comments_author_id_users_id_fk")
  post_id   Int
  post      Post      @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comments_post_id_posts_id_fk")
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  slug      String    @unique
  title     String
  desc      String
  img       String?
  views     Int       @default(0)
  catSlug   String
  cat       Category  @relation(fields: [catSlug], references: [slug])
  userEmail String
  user      User      @relation(fields: [userEmail], references: [email])
  comments  Comment[]
}

model User {
  id                 Int       @id @default(autoincrement())
  email              String    @unique
  name               String
  password           String
  hashedRefreshToken String?
  role               Role      @default(USER)
  comments           Comment[]
  posts              Post[]
}

model Category {
  id    Int     @id @default(autoincrement())
  slug  String  @unique
  title String
  img   String?
  Posts Post[]
}

enum Role {
  ADMIN
  EDITOR
  USER
}

model Machine {
  id               Int               @id @default(autoincrement())
  name             String
  type             MachineType
  monitoringPoints MonitoringPoint[] // A machine has multiple monitoring points
}

model MonitoringPoint {
  id        Int      @id @default(autoincrement())
  name      String
  machineId Int
  machine   Machine  @relation(fields: [machineId], references: [id], onDelete: Cascade)
  sensors   Sensor[] // A monitoring point can have multiple sensors
}

model Sensor {
  id                Int             @id @default(autoincrement())
  model             SensorModel
  monitoringPointId Int
  monitoringPoint   MonitoringPoint @relation(fields: [monitoringPointId], references: [id], onDelete: Cascade)
}

enum MachineType {
  Pump
  Fan
}

enum SensorModel {
  TcAg
  TcAs
  HF_plus
}
